# Setup SQLite DB
conn = sqlite3.connect('oracle.db')
cursor = conn.cursor()
cursor.execute("CREATE TABLE IF NOT EXISTS conversations (id INTEGER PRIMARY KEY AUTOINCREMENT, user_input TEXT, bot_response TEXT)")

#Start loop
user_input=""

# Get configuration from user
config = {}
config['mode'] = input('Choose between text only or text + voice (text/voice): ')
config['tokens'] = input('Enter number of tokens for response (default is 256): ') or 256
config['prompt'] = input('Enter prompt for response (default is empty): ') or ''
config['temperature'] = input('Enter temperature for response (default is 0.9): ') or 0.9
config['top_p'] = input('Enter top_p for response (default is 1): ') or 1
config['model'] = input('Enter model for response (default is "text-davinci-003"): ') or 'text-davinci-003'
config['remember_conversations'] = input('Remember previous conversations? (yes/no): ')

if config['remember_conversations'] == 'yes':
    # Load previous conversations
    cursor.execute('SELECT * FROM conversations')
    rows = cursor.fetchall()
    conversation_history = []
    for row in rows:
        conversation_history.append((row[1], row[2]))

# Setup Deep Learning Model
model = tf.keras.Sequential()
model.add(tf.keras.layers.Embedding(input_dim=len(conversation_history), output_dim=64))
model.add(tf.keras.layers.LSTM(64, return_sequences=True))
model.add(tf.keras.layers.Dense(64, activation='relu'))
model.add(tf.keras.layers.Dense(1))
model.compile(optimizer='adam', loss='mean_squared_error', metrics=['accuracy'])

if config['mode'] == 'voice':
    import win32com.client
    engine = win32com.client.Dispatch('SAPI.SpVoice')
    engine.Speak("I am Sabia, the all knowing terminal Oracle! \rYou may say 'bye' at any time to leave and continue upon your journies.\rFain would I hear thy words, O noble one. Pray, mote thy requests, and I shall answer them in ancient tongue.")
    while user_input != 'bye':
        r = sr.Recognizer()
        with sr.Microphone() as source:
            audio = r.listen(source)
        try:
            user_input = r.recognize_google(audio)
            #Check if user input is blank
            if not user_input:
                engine.Speak("A foolyshe demand behoueth a foolyshe answere! I do not understand thy question. Asketh thou once more: ")
            else:
                # Use Deep Learning Model
                if config['remember_conversations'] == 'yes':
                    predicted_response = model.predict([user_input])
                    predicted_response = predicted_response.flatten()
                    predicted_response = conversation_history[predicted_response]
                    engine.Speak(f"{predicted_response}")
                else:
                    response = openai.Completion.create(
                        model=config['model'],
                        tokens=config['tokens'],
                        prompt=user_input,
                        temperature=config['temperature'],
                        top_p=config['top_p']
                    )
                    engine.Speak(f"{response['choices'][0]['text']}")
                    # Store conversation in SQLite
                    cursor.execute("INSERT INTO conversations (user_input, bot_response) VALUES (?, ?)", (user_input, response['choices'][0]['text']))
                    conn.commit()
        except:
            print("Sorry, I didn't catch that.")

else:
    print("Sabia: I am Sabia, the all knowing terminal Oracle. Type 'bye' at any time to leave and continue upon your journey. Ask, and ye shalt receive: ")
    while user_input!='bye':
        user_input = input()
        
        #Check if user input is blank
        if not user_input:
            print("\nSabia: A foolyshe demand behoueth a foolyshe answere!\r I do not understand thy question. Asketh thou once more: ")
        else:
            # Use Deep Learning Model
            if config['remember_conversations'] == 'yes':
                predicted_response = model.predict([user_input])
                predicted_response = predicted_response.flatten()
                predicted_response = conversation_history[predicted_response]
                print(f"Sabia: {predicted_response}")
            else:
                response = openai.Completion.create(
                    model=config['model'],
                    tokens=config['tokens'],
                    prompt=user_input,
                    temperature=config['temperature'],
                    top_p=config['top_p']
                )
                print(f"Sabia: {response['choices'][0]['text']}")
                # Store conversation in SQLite
                cursor.execute("INSERT INTO conversations (user_input, bot_response) VALUES (?, ?)", (user_input, response['choices'][0]['text']))
                conn.commit()

if config['mode'] == 'voice':
    engine.Speak("That was so much fun I've lost my chauces! Fare thee well, traveler, and beware the Damsels about the inn.")
else:
    print("Sabia:That was so much fun I've lost my chauces! Fare thee well, traveler, and beware the Damsels about the inn.")
conn.close()
